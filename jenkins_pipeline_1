pipeline {
    agent any
    
    environment {
        GIT_CREDENTIALS_ID = "cc65509a-5ccc-41ee-86b5-537234ef073e"
    }
    
    stages {
        stage('Execute All Steps') {
            steps {
                script {
                    def NAMESPACE = NAMESPACE_NAME.toLowerCase()
                    FEATURE_BRANCH = "${NAMESPACE}-branch"                           
                    // Clone the repository
                    withCredentials([
                        usernamePassword(credentialsId: "${GIT_CREDENTIALS_ID}", usernameVariable: 'username', passwordVariable: 'password')])
                        {
                            sh """
                                git clone https://$username:$password@github.com/SubbuDevasani/Jenkins_Pipelines.git
                                cd Jenkins_Pipelines
                                git checkout -b ${FEATURE_BRANCH}
                                
                                echo 'path "${NAMESPACE}/sys/namespaces" { capabilities = ["read" , "write"] }' >> Appedning_file.yaml
                                
                                git add .
                                git commit -m "Add ${NAMESPACE} value to file"
                                git push https://$username:$password@github.com/SubbuDevasani/Jenkins_Pipelines.git $FEATURE_BRANCH
                            """
                    }
                }
            }
        }
    }

    post {
    failure {
        script {
            // Remove the feature branch and revert changes
            sh """
                git checkout master
                git branch -D ${FEATURE_BRANCH}
                git push https://$username:$password@github.com/SubbuDevasani/Jenkins_Pipelines.git --delete ${FEATURE_BRANCH}
            """
        }
    }
    
    always {
        script {
            // Cleanup workspace if necessary
            cleanWs()
        }
    }
  }
}
